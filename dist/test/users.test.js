"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const app_1 = __importDefault(require("../app"));
// import { Users } from './users.interface';
const request = require('supertest');
var Utils = require('../utils/index');
// /**
//  * GET
//  */
describe('GET api/v1/users', () => {
    test('It responds with JSON object of users', (done) => __awaiter(this, void 0, void 0, function* () {
        const response = yield request(app_1.default).get('/api/v1/users');
        expect(response.status).toBe(200);
        expect(response.body.message).toEqual('Successfully retrieved users.');
        expect(response.body instanceof Object).toBe(true);
        expect(response.body.data[0]).toMatchObject({
            id: expect.any(Number),
            email_address: expect.any(String),
            password: expect.any(String),
            first_name: expect.any(String),
            last_name: expect.any(String),
            created_at: expect.any(String),
            updated_at: expect.any(String),
        });
        expect(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/.test(response.body.data[0].email_address)).toBe(true);
        done();
    }));
});
//   /**
//    * GET/:id
//    */
//   describe('GET api/v1/users/:id', () => {
//     it('responds with single JSON object', () => {
//       return chai.request(app).get('/api/v1/users/1')
//         .then(res => {
//           expect(res.status).to.equal(200);
//           expect(res).to.be.json;
//           expect(res.body).to.be.an('object');
//           expect(res.body.message).to.equal('Successfully retrieved user by id.');
//         });
//     });
//     it('should return aronprenovostmktg@gmail.com', () => {
//       return chai.request(app).get('/api/v1/users/1')
//         .then(res => {
//           expect(res.body.data.email_address).to.equal('aronprenovostmktg@gmail.com');
//         });
//     });
//   });
//   /**
//    * POST
//    */
//   describe('POST api/v1/users', () => {
//     let timestamp = Utils.datetimeTimestamp(); 
//     let testJSON = {
//       'email_address': `chaitest-${timestamp.replace(/ +/g, '-')}@testUsers.com`, 
//       'first_name': 'test account', 
//       'last_name': 'test account', 
//       'password': 'test',
//       'created_at': timestamp
//       // 'id': generated by mysql 
//     }; 
//     it('responds with JSON object', () => {
//       return chai.request(app).post('/api/v1/users')
//       .send(testJSON)
//         .then(res => {
//           expect(res.status).to.equal(201);
//           expect(res).to.be.json;
//           expect(res.body).to.be.an('object');
//           expect(res.body.message).to.equal('Successfully added new user.');
//         });
//     });
//   });
//   /**
//    * PUT
//    */
//    describe('PUT api/v1/users', () => {
//     let timestamp = Utils.datetimeTimestamp();  
//     let testJSON = {
//       'id': 1,
//       'password': `password-${timestamp.replace(/ +/g, '-')}`,
//       'updated_at': timestamp
//     }; 
//     it('responds with JSON object', () => {
//       return chai.request(app).put('/api/v1/users')
//       .send(testJSON)
//         .then(res => {
//           expect(res.status).to.equal(200);
//           expect(res).to.be.json;
//           expect(res.body).to.be.an('object');
//           expect(res.body.message).to.equal('Successfully updated user.');
//         });
//     });
//   });
//   /**
//    * DELETE
//    */
//     // to do... 
// });
